<?php

/**
 * @file
 * Analytics module.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\neg_analytics\Impression;
use Drupal\neg_analytics\Settings;

/**
 * Implements hook_library_info_build().
 */
function neg_analytics_library_info_alter(&$libraries, $extension) {
  if ($extension === 'neg_analytics') {

    // Set Google Analytics tracking code.
    if (isset($libraries['google_analytics'])) {
      $id = Settings::config()->get('ga_measurement_id');
      $gtag = $libraries['google_analytics']['js']['https://www.googletagmanager.com/gtag/js'];
      $newJs = [
        'https://www.googletagmanager.com/gtag/js?id=' . $id => $gtag,
      ];
      unset($libraries['google_analytics']['js']['https://www.googletagmanager.com/gtag/js']);
      $libraries['google_analytics']['js'] = $newJs + $libraries['google_analytics']['js'];
    }

    // Set dependencies for render_events.
    if (isset($libraries['render_events'])) {
      $dependencies = &$libraries['render_events']['dependencies'];

      // Check for Google Analytics.
      if (isset($libraries['google_analytics'])) {
        $dependencies[] = 'neg_analytics/google_analytics';
      }

      // Check for Facebook Analytics.
      if (isset($libraries['facebook_analytics'])) {
        $dependencies[] = 'neg_analytics/facebook_analytics';
      }

      // Check for Pinterest Analytics.
      if (isset($libraries['pinterest_analytics'])) {
        $dependencies[] = 'neg_analytics/pinterest_analytics';
      }
    }
  }
}

/**
 * Implements hook_page_attachments().
 */
function neg_analytics_page_attachments(array &$attachments) {
  Impression::instance()->addAttachments($attachments);
}

/**
 * Implements hook_preprocess_page().
 */
function neg_analytics_preprocess_page(array &$variables) {
  Impression::instance()->addLibraryAttachments($variables);
}

/**
 * Implements hook_preprocess_shopify_product().
 */
function neg_analytics_preprocess_shopify_product(array &$variables) {

  // Add analytics impression.
  $impressionType = 'list';
  switch ($variables['view_mode']) {
    case 'full':
      $impressionType = 'detail';
      break;
  }
  Impression::instance()->addProductImpression($variables['elements']['#shopify_product'], $impressionType);

}

/**
 * Implements hook_form_alter().
 */
function neg_analytics_form_alter(&$form, FormStateInterface $form_state, $form_id) {

  switch ($form_id) {
    case 'shopify_add_to_cart_form':
      $sku = $form['#attributes']['data-variant-sku'];
      $productId = $form['#attributes']['data-product-id'];
      $variantId = $form['#attributes']['data-variant-id'];
      $price = $form['#attributes']['data-variant-price'];

      $form['submit']['#attributes']['onclick'] = "const btn = this; if (typeof events === 'object') { return events.triggerEvent(\"addToCart\", {\"variant_id\": \"$variantId\", \"product_id\": \"$productId\", \"sku\": \"$sku\", \"price\": \"$price\"}, function() { return shopping_cart.addToCart(btn)});} else { return shopping_cart.addToCart(btn); }";
      break;
  }
}
